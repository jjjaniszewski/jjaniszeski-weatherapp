version: '3.8'

services:
    jjaniszewski.weatherapp.publicapi:
        image: jjaniszewski.weatherapp.publicapi
        build:
            context: .
            dockerfile: JJaniszewski.WeatherApp.PublicApi/Dockerfile
        depends_on:
            - sqlserver
            - azurite
        environment:
            - ConnectionStrings__SqlServer=Server=sqlserver;Database=WeatherDb;User=sa;Password=Your_password123;
            - AzureWebJobsStorage=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1

    jjaniszewski.weatherapp.azurefunction:
        image: jjaniszewski.weatherapp.azurefunction
        build:
            context: .
            dockerfile: JJaniszewski.WeatherApp.AzureFunction/Dockerfile
        depends_on:
            - sqlserver
            - azurite
        environment:
            - WEATHER_UPDATER_CRON_SCHEDULE=0 0 * * * *
            - AzureWebJobsStorage=UseDevelopmentStorage=true

    sqlserver:
        image: mcr.microsoft.com/azure-sql-edge:latest
        container_name: sqlserver
        ports:
            - "1433:1433"
        environment:
            SA_PASSWORD: "Your_password123"
            ACCEPT_EULA: "Y"
        healthcheck:
            test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "Your_password123", "-Q", "SELECT 1" ]
            interval: 10s
            retries: 10

    azurite:
        image: mcr.microsoft.com/azure-storage/azurite
        container_name: azurite
        ports:
            - "20000:10000" # Blob
            - "20001:10001" # Queue
            - "20002:10002" # Table
        command: "azurite --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0"
        volumes:
            - azurite_data:/data

volumes:
    azurite_data:
